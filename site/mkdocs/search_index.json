{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to Trent Docs\n\n\nGit Repo For These Docs\n\n\nObviously, the commit history will reflect the time when these documents are written.\n\n\n\n\nNspawn Containers\n\n\nQuick Dirty Redis Nspawn Container on Arch Linux\n\n\nQuick Dirty Postgresql Nspawn Container on Arch Linux\n\n\nServe And Share Apps From Your Phone With Fdroid",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-trent-docs",
            "text": "",
            "title": "Welcome to Trent Docs"
        },
        {
            "location": "/#git-repo-for-these-docs",
            "text": "Obviously, the commit history will reflect the time when these documents are written.   Nspawn Containers  Quick Dirty Redis Nspawn Container on Arch Linux  Quick Dirty Postgresql Nspawn Container on Arch Linux  Serve And Share Apps From Your Phone With Fdroid",
            "title": "Git Repo For These Docs"
        },
        {
            "location": "/nspawn/",
            "text": "Nspawn Containers\n\n\nThis Link For Arch Linux Wiki for Nspawn Containers\n\n\nCreate a FileSystem\n\n\ncd /var/lib/machines\n# create a directory\nmkdir <container>\n# use pacstrap to create a file system\npacstrap -i -c -d <container> base --ignore linux\n\n\n\n\nAt this point you might want to copy over some configs to save time later.\n\n\n\n\n/etc/locale.conf\n\n\n/root/.bashrc\n\n\n/etc/locale.gen\n\n\n\n\nFirst boot and create root password\n\n\nsystemd-nspawn -b -D <container>\npasswd\npoweroff\n# if you want to nat the container add *-n* flag\nsystemd-nspawn -b -D <container> -n\n# and to bind mount the package cache\nsystemd-nspawn -b -D <container> -n --bind=/var/cache/pacman/pkg\n\n\n\n\nNetworking\n\n\nOn Arch, assuming you have systemd-networkd and systemd-resolved\nset up correctly, networking from the host end of things should\njust work.\n\nHowever on Linode it does not. What does work on Linode is to create\na bridge interface. Two files for br0 will get the job done.\n\n\n# /etc/systemd/network/50-br0.netdev\n[NetDev]\nName=br0\nKind=bridge\n\n\n\n\n# /etc/systemd/network/50-br0.netdev\n[Match]\nName=br0\n\n[Network]\nAddress=10.0.55.1/24\nDHCPServer=yes\nIPMasquerade=yes\n\n\n\n\nNotice how the configuration file tells systemd-networkd to offer\nDHCP service and to perform masquerade. You can modify the \nsystemd-nspawn\n\ncommand to use the bridge interface. Every container attached to this bridge\nwill be on the same subnet and able to talk to each other.\n\n\n# first restart systemd-networkd to bring up the new bridge interface\nsystemctl restart systemd-networkd\n# and add --network-bridge=br0 to systemd-nspawn command\nsystemd-nspawn -b -D <container> --network-bridge=br0 --bind=/var/cache/pacman/pkg\n\n\n\n\nAutomatically Starting the Container\n\n\nThere are two ways to automate starting the container. You can override\n\nsystemd-nspawn@.service\n or create an \nnspawn\n file.  \n\n\nFirst enable machines.target\n\n\n# to override the systemd-nspawn@.service file\ncp /lib/systemd/system/systemd-nspawn@.service /etc/systemd/system/systemd-nspawn@<container>.service\n\n\n\n\nEdit \n/etc/systemd/system/systemd-nspawn@<container>.service\n to add the \nsystemd-nspawn\n options\nyou want to the \nExecStart\n command.\n\n\nOr create \n/etc/systemd/nspawn/<container>.nspawn\n\n\n# /etc/systemd/nspawn/<container>.nspawn\nBind=/var/cache/pacman/pkg\n\n[Network]\nBridge=br0\n\n\n\n\n# in either case\nsystemctl start/enable systemd-nspawn@<container>\n# to get a shell\nmachinectl shell <container>\n# and then to get an environment\nbash\n\n\n\n\nInitial Configuration Inside The Container\n\n\n# set time zone if you don't want UTC\ntimedatectl set-timezone <timezone>\n# enable ntp, networktime\ntimedatectl set-ntp 1\n# enable networking from inside the container\nsystemctl enable systemd-networkd\nsystemctl start systemd-networkd\nsystemctl enable systemd-resolved\nsystemctl start systemd-resolved\nrm /etc/resolv.conf \nln -s /run/systemd/resolve/resolv.conf /etc/\n# ping google\nping -c 3 google.com\n\n\n\n\nIf you want to change the locale",
            "title": "Nspawn"
        },
        {
            "location": "/nspawn/#nspawn-containers",
            "text": "This Link For Arch Linux Wiki for Nspawn Containers",
            "title": "Nspawn Containers"
        },
        {
            "location": "/nspawn/#create-a-filesystem",
            "text": "cd /var/lib/machines\n# create a directory\nmkdir <container>\n# use pacstrap to create a file system\npacstrap -i -c -d <container> base --ignore linux  At this point you might want to copy over some configs to save time later.   /etc/locale.conf  /root/.bashrc  /etc/locale.gen",
            "title": "Create a FileSystem"
        },
        {
            "location": "/nspawn/#first-boot-and-create-root-password",
            "text": "systemd-nspawn -b -D <container>\npasswd\npoweroff\n# if you want to nat the container add *-n* flag\nsystemd-nspawn -b -D <container> -n\n# and to bind mount the package cache\nsystemd-nspawn -b -D <container> -n --bind=/var/cache/pacman/pkg",
            "title": "First boot and create root password"
        },
        {
            "location": "/nspawn/#networking",
            "text": "On Arch, assuming you have systemd-networkd and systemd-resolved\nset up correctly, networking from the host end of things should\njust work. \nHowever on Linode it does not. What does work on Linode is to create\na bridge interface. Two files for br0 will get the job done.  # /etc/systemd/network/50-br0.netdev\n[NetDev]\nName=br0\nKind=bridge  # /etc/systemd/network/50-br0.netdev\n[Match]\nName=br0\n\n[Network]\nAddress=10.0.55.1/24\nDHCPServer=yes\nIPMasquerade=yes  Notice how the configuration file tells systemd-networkd to offer\nDHCP service and to perform masquerade. You can modify the  systemd-nspawn \ncommand to use the bridge interface. Every container attached to this bridge\nwill be on the same subnet and able to talk to each other.  # first restart systemd-networkd to bring up the new bridge interface\nsystemctl restart systemd-networkd\n# and add --network-bridge=br0 to systemd-nspawn command\nsystemd-nspawn -b -D <container> --network-bridge=br0 --bind=/var/cache/pacman/pkg",
            "title": "Networking"
        },
        {
            "location": "/nspawn/#automatically-starting-the-container",
            "text": "There are two ways to automate starting the container. You can override systemd-nspawn@.service  or create an  nspawn  file.    First enable machines.target  # to override the systemd-nspawn@.service file\ncp /lib/systemd/system/systemd-nspawn@.service /etc/systemd/system/systemd-nspawn@<container>.service  Edit  /etc/systemd/system/systemd-nspawn@<container>.service  to add the  systemd-nspawn  options\nyou want to the  ExecStart  command.  Or create  /etc/systemd/nspawn/<container>.nspawn  # /etc/systemd/nspawn/<container>.nspawn\nBind=/var/cache/pacman/pkg\n\n[Network]\nBridge=br0  # in either case\nsystemctl start/enable systemd-nspawn@<container>\n# to get a shell\nmachinectl shell <container>\n# and then to get an environment\nbash",
            "title": "Automatically Starting the Container"
        },
        {
            "location": "/nspawn/#initial-configuration-inside-the-container",
            "text": "# set time zone if you don't want UTC\ntimedatectl set-timezone <timezone>\n# enable ntp, networktime\ntimedatectl set-ntp 1\n# enable networking from inside the container\nsystemctl enable systemd-networkd\nsystemctl start systemd-networkd\nsystemctl enable systemd-resolved\nsystemctl start systemd-resolved\nrm /etc/resolv.conf \nln -s /run/systemd/resolve/resolv.conf /etc/\n# ping google\nping -c 3 google.com  If you want to change the locale",
            "title": "Initial Configuration Inside The Container"
        },
        {
            "location": "/arch_redis_nspawn/",
            "text": "Quick Dirty Redis Nspawn Container on Arch Linux\n\n\nRefer to the \nNspawn\n page for setting up the nspawn container.\n\n\nOnce you have the container running, it seems all you have to do to get\nthings working in a container subnet is to change the bind address.\n\n\n# /etc/redis.conf\n# bind 127.0.0.1\nbind 0.0.0.0\n\n\n\n\nyou can nmap port 6379, be sure to restart redis\n\n\nAgain I would refer you to the Arch Wiki",
            "title": "Quick Dirty Redis Nspawn Container on Arch Linux"
        },
        {
            "location": "/arch_redis_nspawn/#quick-dirty-redis-nspawn-container-on-arch-linux",
            "text": "Refer to the  Nspawn  page for setting up the nspawn container.  Once you have the container running, it seems all you have to do to get\nthings working in a container subnet is to change the bind address.  # /etc/redis.conf\n# bind 127.0.0.1\nbind 0.0.0.0  you can nmap port 6379, be sure to restart redis  Again I would refer you to the Arch Wiki",
            "title": "Quick Dirty Redis Nspawn Container on Arch Linux"
        },
        {
            "location": "/arch_postgresql_nspawn/",
            "text": "Quick Dirty Postgresql Nspawn Container on Arch Linux\n\n\nRefer to the \nNspawn\n page for setting up the nspawn container.",
            "title": "Quick Dirty Postgresql Nspawn Container on Arch Linux"
        },
        {
            "location": "/arch_postgresql_nspawn/#quick-dirty-postgresql-nspawn-container-on-arch-linux",
            "text": "Refer to the  Nspawn  page for setting up the nspawn container.",
            "title": "Quick Dirty Postgresql Nspawn Container on Arch Linux"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/",
            "text": "Serve And Share Apps From Your Phone With Fdroid\n\n\nFind The Menu Item for \nSwap apps\n\n\nStep 3 you are born on third base\n\n\nOpen fdroid, and navigate to the menu by touching three dots in upper right hand corner of the screen. Select \nSwap apps\n.\n\n\n\n\nStep 4\n\n\nOn the next screen toggle on \nVisible via Wi-Fi\n\n\n\n\nStep 5\n\n\nAt the bottom of the screen select \nSCAN QR CODE\n\n\n\n\nStep 6\n\n\nAt the next screen \nChoose Apps\n you want to xerve I mean serve and then touch the -> right arrow to proceed\n\n\n\n\nStep 7\n\n\nTouch the -> right arrow again, do it.\n\n\n\n\nOcho\n\n\nTouch the -> right arrow until you are coming here\n\n\n\nNotice you can use either a qr code or a local url, so grab one of your other phones.\n\n\nPrivacy Friendly Qr Scanner\n appears to be a good Qr scanner,\nbut of course you can key in the url by hand too.\n\n\nStep Nine\n\n\nOn your other phone open fdroid, navigate to menu by selecting the 3 dots in the upper right hand corner and choose \nRepositories\n\n\n\n\nStep Ten\n\n\nToggle all the current repos off and then if you want to key in the new local repo url by hand touch the + plus in the upper right hand corner\n\n\n\n\nStep Eleven A\n\n\nAfter touching the + plus button in \nStep Ten\n on phone two, you can fill in the url address that corresponds to the photo in \nOcho\n\n\n\n\nStep Twelve A\n\n\nIf you prefer not to key in the url by hand, on phone two touch the\nhome button and then open your qr-scanning application and scan the\nqr code on phone one, as seen in photo \nOcho\n. The qr-scanning\napp will direct you to open fdroid, and your result will be the same as\nthe photo in \nStep Eleven A\n\n\nStep Thirteen\n\n\nOn phone two you can now download and install apps and updates from phone one, and the download speed will be much faster than from the internet.",
            "title": "Serve And Share Apps From Your Phone With Fdroid"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#serve-and-share-apps-from-your-phone-with-fdroid",
            "text": "",
            "title": "Serve And Share Apps From Your Phone With Fdroid"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#find-the-menu-item-for-swap-apps",
            "text": "",
            "title": "Find The Menu Item for Swap apps"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-3-you-are-born-on-third-base",
            "text": "",
            "title": "Step 3 you are born on third base"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#open-fdroid-and-navigate-to-the-menu-by-touching-three-dots-in-upper-right-hand-corner-of-the-screen-select-swap-apps",
            "text": "",
            "title": "Open fdroid, and navigate to the menu by touching three dots in upper right hand corner of the screen. Select Swap apps."
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-4",
            "text": "",
            "title": "Step 4"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#on-the-next-screen-toggle-on-visible-via-wi-fi",
            "text": "",
            "title": "On the next screen toggle on Visible via Wi-Fi"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-5",
            "text": "",
            "title": "Step 5"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#at-the-bottom-of-the-screen-select-scan-qr-code",
            "text": "",
            "title": "At the bottom of the screen select SCAN QR CODE"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-6",
            "text": "",
            "title": "Step 6"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#at-the-next-screen-choose-apps-you-want-to-xerve-i-mean-serve-and-then-touch-the-right-arrow-to-proceed",
            "text": "",
            "title": "At the next screen Choose Apps you want to xerve I mean serve and then touch the -&gt; right arrow to proceed"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-7",
            "text": "",
            "title": "Step 7"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#touch-the-right-arrow-again-do-it",
            "text": "",
            "title": "Touch the -&gt; right arrow again, do it."
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#ocho",
            "text": "",
            "title": "Ocho"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#touch-the-right-arrow-until-you-are-coming-here",
            "text": "Notice you can use either a qr code or a local url, so grab one of your other phones.  Privacy Friendly Qr Scanner  appears to be a good Qr scanner,\nbut of course you can key in the url by hand too.",
            "title": "Touch the -&gt; right arrow until you are coming here"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-nine",
            "text": "",
            "title": "Step Nine"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#on-your-other-phone-open-fdroid-navigate-to-menu-by-selecting-the-3-dots-in-the-upper-right-hand-corner-and-choose-repositories",
            "text": "",
            "title": "On your other phone open fdroid, navigate to menu by selecting the 3 dots in the upper right hand corner and choose Repositories"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-ten",
            "text": "",
            "title": "Step Ten"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#toggle-all-the-current-repos-off-and-then-if-you-want-to-key-in-the-new-local-repo-url-by-hand-touch-the-plus-in-the-upper-right-hand-corner",
            "text": "",
            "title": "Toggle all the current repos off and then if you want to key in the new local repo url by hand touch the + plus in the upper right hand corner"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-eleven-a",
            "text": "",
            "title": "Step Eleven A"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#after-touching-the-plus-button-in-step-ten-on-phone-two-you-can-fill-in-the-url-address-that-corresponds-to-the-photo-in-ocho",
            "text": "",
            "title": "After touching the + plus button in Step Ten on phone two, you can fill in the url address that corresponds to the photo in Ocho"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-twelve-a",
            "text": "If you prefer not to key in the url by hand, on phone two touch the\nhome button and then open your qr-scanning application and scan the\nqr code on phone one, as seen in photo  Ocho . The qr-scanning\napp will direct you to open fdroid, and your result will be the same as\nthe photo in  Step Eleven A",
            "title": "Step Twelve A"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#step-thirteen",
            "text": "",
            "title": "Step Thirteen"
        },
        {
            "location": "/server_and_share_apps_from_your_phone_with_fdroid/#on-phone-two-you-can-now-download-and-install-apps-and-updates-from-phone-one-and-the-download-speed-will-be-much-faster-than-from-the-internet",
            "text": "",
            "title": "On phone two you can now download and install apps and updates from phone one, and the download speed will be much faster than from the internet."
        }
    ]
}